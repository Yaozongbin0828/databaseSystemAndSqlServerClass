1.范式有哪几类？ 
第一范式（1NF）：要求关系中的每个属性都是不可再分的原子值。例如，如果有一个地址字段，它应该被分解成街道、城市、州等原子值，而不是存储整个地址的字符串。这样可以避免数据冗余和复杂性。
第二范式（2NF）：在1NF的基础上要求非主属性完全依赖于候选键，而不是部分依赖。这意味着每个非主属性都必须直接依赖于关系的全部候选键，而不是仅依赖于候选键的一部分。
第三范式（3NF）：在2NF的基础上要求不存在传递依赖，即所有非主属性都直接依赖于主键，而不是依赖于其他非主属性。这样可以进一步减少数据冗余，提高数据的一致性和完整性。
Boyce-Codd范式：Boyce-Codd范式（BCNF）是关系数据库理论中的一种范式，它是在第三范式（3NF）的基础上进一步规范化的结果。
2.什么是强实体？什么是弱实体
强实体：具有自己的标识符（主键），可以单独存在。在数据库中，强实体对应着一个独立的表。
弱实体：没有自己的标识符，依赖于其他实体的存在才能被识别。通常，弱实体的存在是依赖于与之相关联的强实体。在数据库中，弱实体通常作为一个与强实体关联的子表存在。
3.什么是递归联系？
递归联系：递归联系是指在关系型数据库中，一个实体与自身相互关联的情况。这种关系在数据库设计中可能会出现，通常用于表示层次结构或自引用关系。例如，在一个员工表中，可能有一个“上司ID”字段指向同一个表中的另一个员工的ID，这样就形成了一个递归联系。这种联系使得可以从一个员工找到其直接上司，然后再通过上司找到上司的上司，以此类推，直到达到组织的最高级别。

